cmake_minimum_required(VERSION 3.8)
project(clap_b7_driver)


#if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
#  add_compile_options(-Wall -Wextra -Wpedantic)
#endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_msgs REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(mavros_msgs REQUIRED)
find_package(autoware_sensing_msgs REQUIRED)
find_package(Eigen3 REQUIRED)

find_path(GeographicLib_INCLUDE_DIR GeographicLib/Config.h
        PATH_SUFFIXES GeographicLib
)

set(GeographicLib_INCLUDE_DIRS ${GeographicLib_INCLUDE_DIR})
find_library(GeographicLib_LIBRARIES
        NAMES Geographic
)

include_directories(include)

set(msg_files
        "msg/ClapHeading.msg"
        "msg/ClapGpsPos.msg"
        "msg/ClapGpsVel.msg"
        "msg/ClapImu.msg"
        "msg/ClapIns.msg"
        "msg/ClapECEF.msg"
        )


find_path(GeographicLib_INCLUDE_DIR GeographicLib/Config.h
        PATH_SUFFIXES GeographicLib
        )

rosidl_generate_interfaces(${PROJECT_NAME}
          ${msg_files}
          DEPENDENCIES
            std_msgs
        )

ament_export_dependencies(rosidl_default_runtime)


set(TARGET_SRC
        src/clap_binary_parser.cpp
        src/clap_b7_driver_node.cpp
        src/clap_b7_driver.cpp
        src/AsyncSerial.cpp
        src/clap_msg_wrapper.cpp
        src/clap_config.cpp
        src/clap_publisher.cpp
        src/ll_to_utm_transform.cpp
        )

add_executable(clap_b7_driver_node
        ${TARGET_SRC}
        )

target_link_libraries(clap_b7_driver_node
        Geographic
)

ament_target_dependencies(clap_b7_driver_node
        rclcpp
        std_msgs
        sensor_msgs
        geometry_msgs
        tf2_ros
        tf2_msgs
        tf2_geometry_msgs
        mavros_msgs
        nav_msgs
        autoware_sensing_msgs
        Eigen3
        )

install(TARGETS
        clap_b7_driver_node
        DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY
        launch
        DESTINATION share/${PROJECT_NAME}
        )

install(DIRECTORY
        config
        DESTINATION share/${PROJECT_NAME}
        )

rosidl_target_interfaces(clap_b7_driver_node
        ${PROJECT_NAME} "rosidl_typesupport_cpp")

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()
ament_package()
