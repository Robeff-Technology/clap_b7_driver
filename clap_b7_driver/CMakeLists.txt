cmake_minimum_required(VERSION 3.8)
project(clap_b7_driver)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
include_directories(include/clap_b7_driver)



set(TARGET_SRC
        src/clap_binary_parser.cpp
        src/clap_b7_driver_node.cpp
        )

set(TARGET_HEADER
        include/clap_b7_driver/clap_structs.h
        include/clap_b7_driver/clap_binary_parser.h)


add_executable(clap_b7_driver_node
        ${TARGET_SRC}
        ${TARGET_HEADER}
        )

ament_target_dependencies(clap_b7_driver_node
        rclcpp
        std_msgs
        sensor_msgs
        geometry_msgs
        )


target_include_directories(clap_b7_driver_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(clap_b7_driver_node PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

install(TARGETS
        clap_b7_driver_node
        DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY launch
        DESTINATION share/${PROJECT_NAME}
        )

install(DIRECTORY config
        DESTINATION share/${PROJECT_NAME}
        )

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
